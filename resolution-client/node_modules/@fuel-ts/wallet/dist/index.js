"use strict";var P=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var N=Object.getOwnPropertyNames;var W=Object.prototype.hasOwnProperty;var z=(i,e,t)=>e in i?P(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var F=(i,e)=>{for(var t in e)P(i,t,{get:e[t],enumerable:!0})},Q=(i,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of N(e))!W.call(i,r)&&r!==t&&P(i,r,{get:()=>e[r],enumerable:!(s=C(e,r))||s.enumerable});return i};var U=i=>Q(P({},"__esModule",{value:!0}),i);var u=(i,e,t)=>(z(i,typeof e!="symbol"?e+"":e,t),t);var V={};F(V,{Account:()=>g,BaseWalletUnlocked:()=>y,Wallet:()=>h,WalletLocked:()=>l,WalletUnlocked:()=>a});module.exports=U(V);var w=require("@fuel-ts/hasher"),T=require("@fuel-ts/providers"),M=require("@fuel-ts/signer");var f=require("@ethersproject/bytes"),q=require("@fuel-ts/address"),S=require("@fuel-ts/address/configs"),A=require("@fuel-ts/interfaces"),B=require("@fuel-ts/math"),o=require("@fuel-ts/providers"),x=require("@fuel-ts/transactions/configs");var m="http://127.0.0.1:4000/graphql";var g=class extends A.AbstractAccount{address;provider;constructor(e,t=m){super(),this.provider=this.connect(t),this.address=q.Address.fromDynamicInput(e)}connect(e){return typeof e=="string"?this.provider?this.provider.connect(e):this.provider=new o.Provider(e):this.provider=e,this.provider}async getResourcesToSpend(e,t){return this.provider.getResourcesToSpend(this.address,e,t)}async getCoins(e){let t=[],r;for(;;){let n=await this.provider.getCoins(this.address,e,{first:9999,after:r});if(t.push(...n),!(n.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return t}async getMessages(){let e=[],s;for(;;){let r=await this.provider.getMessages(this.address,{first:9999,after:s});if(e.push(...r),!(r.length>=9999))break;throw new Error(`Wallets with more than ${9999} messages are not yet supported`)}return e}async getBalance(e=S.NativeAssetId){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],s;for(;;){let r=await this.provider.getBalances(this.address,{first:9999,after:s});if(e.push(...r),!(r.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),s=await this.getResourcesToSpend([t]);e.addResources(s)}async transfer(e,t,s=S.NativeAssetId,r={}){let n={gasLimit:x.MAX_GAS_PER_TX,...r},p=new o.ScriptTransactionRequest(n);p.addCoinOutput(e,t,s);let c=p.calculateFee(),d=[];c.assetId===(0,f.hexlify)(s)?(c.amount=c.amount.add(t),d=[c]):d=[[t,s],c];let R=await this.getResourcesToSpend(d);return p.addResources(R),this.sendTransaction(p)}async withdrawToBaseLayer(e,t,s={}){let r=(0,f.arrayify)("0x".concat(e.toHexString().substring(2).padStart(64,"0"))),n=(0,f.arrayify)("0x".concat((0,B.bn)(t).toHex().substring(2).padStart(16,"0"))),c={script:new Uint8Array([...(0,f.arrayify)(o.withdrawScript.bytes),...r,...n]),gasLimit:x.MAX_GAS_PER_TX,...s},d=new o.ScriptTransactionRequest(c);d.addMessageOutputs();let R=d.calculateFee(),b=[];R.amount=R.amount.add(t),b=[R];let K=await this.getResourcesToSpend(b);return d.addResources(K),this.sendTransaction(d)}async sendTransaction(e){let t=(0,o.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(t)}async simulateTransaction(e){let t=(0,o.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.simulate(t)}};var y=class extends g{provider;signer;constructor(e,t=m){let s=new M.Signer(e);super(s.address,t),this.signer=()=>s,this.provider=this.connect(t)}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}async signMessage(e){return await this.signer().sign((0,w.hashMessage)(e))}async signTransaction(e){let t=(0,T.transactionRequestify)(e),s=(0,w.hashTransaction)(t);return await this.signer().sign(s)}async populateTransactionWitnessesSignature(e){let t=(0,T.transactionRequestify)(e),s=await this.signTransaction(t);return t.updateWitnessByOwner(this.address,s),t}async sendTransaction(e){let t=(0,T.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(await this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=(0,T.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.call(await this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}};u(y,"defaultPath","m/44'/1179993420'/0'/0/0");var L=require("@fuel-ts/hdwallet"),E=require("@fuel-ts/mnemonic"),k=require("@fuel-ts/signer");var l=class extends g{unlock(e){return new a(e,this.provider)}},a=class extends y{lock(){return this.signer=()=>new k.Signer("0x00"),new l(this.address,this.provider)}static generate(e){let t=k.Signer.generatePrivateKey(e==null?void 0:e.entropy);return new a(t,e==null?void 0:e.provider)}static fromSeed(e,t,s){let n=L.HDWallet.fromSeed(e).derivePath(t||a.defaultPath);return new a(n.privateKey,s)}static fromMnemonic(e,t,s,r){let n=E.Mnemonic.mnemonicToSeed(e,s),c=L.HDWallet.fromSeed(n).derivePath(t||a.defaultPath);return new a(c.privateKey,r)}static fromExtendedKey(e,t){let s=L.HDWallet.fromExtendedKey(e);return new a(s.privateKey,t)}};var h=class{static fromAddress(e,t=m){return new l(e,t)}static fromPrivateKey(e,t=m){return new a(e,t)}};u(h,"generate",a.generate),u(h,"fromSeed",a.fromSeed),u(h,"fromMnemonic",a.fromMnemonic),u(h,"fromExtendedKey",a.fromExtendedKey);0&&(module.exports={Account,BaseWalletUnlocked,Wallet,WalletLocked,WalletUnlocked});
//# sourceMappingURL=index.js.map