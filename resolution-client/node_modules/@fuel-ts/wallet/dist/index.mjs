var A=Object.defineProperty;var B=(n,e,t)=>e in n?A(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var p=(n,e,t)=>(B(n,typeof e!="symbol"?e+"":e,t),t);import{hashMessage as z,hashTransaction as F}from"@fuel-ts/hasher";import{transactionRequestify as v}from"@fuel-ts/providers";import{Signer as Q}from"@fuel-ts/signer";import{arrayify as T,hexlify as M}from"@ethersproject/bytes";import{Address as E}from"@fuel-ts/address";import{NativeAssetId as L}from"@fuel-ts/address/configs";import{AbstractAccount as K}from"@fuel-ts/interfaces";import{bn as C}from"@fuel-ts/math";import{withdrawScript as N,ScriptTransactionRequest as S,Provider as W,transactionRequestify as x}from"@fuel-ts/providers";import{MAX_GAS_PER_TX as k}from"@fuel-ts/transactions/configs";var u="http://127.0.0.1:4000/graphql";var m=class extends K{address;provider;constructor(e,t=u){super(),this.provider=this.connect(t),this.address=E.fromDynamicInput(e)}connect(e){return typeof e=="string"?this.provider?this.provider.connect(e):this.provider=new W(e):this.provider=e,this.provider}async getResourcesToSpend(e,t){return this.provider.getResourcesToSpend(this.address,e,t)}async getCoins(e){let t=[],i;for(;;){let a=await this.provider.getCoins(this.address,e,{first:9999,after:i});if(t.push(...a),!(a.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return t}async getMessages(){let e=[],s;for(;;){let i=await this.provider.getMessages(this.address,{first:9999,after:s});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} messages are not yet supported`)}return e}async getBalance(e=L){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],s;for(;;){let i=await this.provider.getBalances(this.address,{first:9999,after:s});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),s=await this.getResourcesToSpend([t]);e.addResources(s)}async transfer(e,t,s=L,i={}){let a={gasLimit:k,...i},d=new S(a);d.addCoinOutput(e,t,s);let o=d.calculateFee(),c=[];o.assetId===M(s)?(o.amount=o.amount.add(t),c=[o]):c=[[t,s],o];let h=await this.getResourcesToSpend(c);return d.addResources(h),this.sendTransaction(d)}async withdrawToBaseLayer(e,t,s={}){let i=T("0x".concat(e.toHexString().substring(2).padStart(64,"0"))),a=T("0x".concat(C(t).toHex().substring(2).padStart(16,"0"))),o={script:new Uint8Array([...T(N.bytes),...i,...a]),gasLimit:k,...s},c=new S(o);c.addMessageOutputs();let h=c.calculateFee(),w=[];h.amount=h.amount.add(t),w=[h];let q=await this.getResourcesToSpend(w);return c.addResources(q),this.sendTransaction(c)}async sendTransaction(e){let t=x(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(t)}async simulateTransaction(e){let t=x(e);return await this.provider.addMissingVariables(t),this.provider.simulate(t)}};var l=class extends m{provider;signer;constructor(e,t=u){let s=new Q(e);super(s.address,t),this.signer=()=>s,this.provider=this.connect(t)}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}async signMessage(e){return await this.signer().sign(z(e))}async signTransaction(e){let t=v(e),s=F(t);return await this.signer().sign(s)}async populateTransactionWitnessesSignature(e){let t=v(e),s=await this.signTransaction(t);return t.updateWitnessByOwner(this.address,s),t}async sendTransaction(e){let t=v(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(await this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=v(e);return await this.provider.addMissingVariables(t),this.provider.call(await this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}};p(l,"defaultPath","m/44'/1179993420'/0'/0/0");import{HDWallet as P}from"@fuel-ts/hdwallet";import{Mnemonic as U}from"@fuel-ts/mnemonic";import{Signer as b}from"@fuel-ts/signer";var R=class extends m{unlock(e){return new r(e,this.provider)}},r=class extends l{lock(){return this.signer=()=>new b("0x00"),new R(this.address,this.provider)}static generate(e){let t=b.generatePrivateKey(e==null?void 0:e.entropy);return new r(t,e==null?void 0:e.provider)}static fromSeed(e,t,s){let a=P.fromSeed(e).derivePath(t||r.defaultPath);return new r(a.privateKey,s)}static fromMnemonic(e,t,s,i){let a=U.mnemonicToSeed(e,s),o=P.fromSeed(a).derivePath(t||r.defaultPath);return new r(o.privateKey,i)}static fromExtendedKey(e,t){let s=P.fromExtendedKey(e);return new r(s.privateKey,t)}};var g=class{static fromAddress(e,t=u){return new R(e,t)}static fromPrivateKey(e,t=u){return new r(e,t)}};p(g,"generate",r.generate),p(g,"fromSeed",r.fromSeed),p(g,"fromMnemonic",r.fromMnemonic),p(g,"fromExtendedKey",r.fromExtendedKey);export{m as Account,l as BaseWalletUnlocked,g as Wallet,R as WalletLocked,r as WalletUnlocked};
//# sourceMappingURL=index.mjs.map