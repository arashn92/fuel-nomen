"use strict";var S=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var V=Object.getOwnPropertyNames;var j=Object.prototype.hasOwnProperty;var H=(r,e,t)=>e in r?S(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var J=(r,e)=>()=>(r&&(e=r(r=0)),e);var $=(r,e)=>{for(var t in e)S(r,t,{get:e[t],enumerable:!0})},X=(r,e,t,o)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of V(e))!j.call(r,i)&&i!==t&&S(r,i,{get:()=>e[i],enumerable:!(o=G(e,i))||o.enumerable});return r};var Y=r=>X(S({},"__esModule",{value:!0}),r);var y=(r,e,t)=>(H(r,typeof e!="symbol"?e+"":e,t),t);var s=J(()=>{});var te={};$(te,{generateTestWallet:()=>ee,seedTestWallet:()=>E});module.exports=Y(te);s();s();s();s();var l="http://127.0.0.1:4000/graphql";s();var L=require("@fuel-ts/hdwallet"),D=require("@fuel-ts/mnemonic"),K=require("@fuel-ts/signer");s();var g=require("@ethersproject/bytes"),W=require("@fuel-ts/address"),C=require("@fuel-ts/address/configs"),M=require("@fuel-ts/interfaces"),F=require("@fuel-ts/math"),d=require("@fuel-ts/providers"),N=require("@fuel-ts/transactions/configs");var h=class extends M.AbstractAccount{address;provider;constructor(e,t=l){super(),this.provider=this.connect(t),this.address=W.Address.fromDynamicInput(e)}connect(e){return typeof e=="string"?this.provider?this.provider.connect(e):this.provider=new d.Provider(e):this.provider=e,this.provider}async getResourcesToSpend(e,t){return this.provider.getResourcesToSpend(this.address,e,t)}async getCoins(e){let t=[],i;for(;;){let c=await this.provider.getCoins(this.address,e,{first:9999,after:i});if(t.push(...c),!(c.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return t}async getMessages(){let e=[],o;for(;;){let i=await this.provider.getMessages(this.address,{first:9999,after:o});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} messages are not yet supported`)}return e}async getBalance(e=C.NativeAssetId){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],o;for(;;){let i=await this.provider.getBalances(this.address,{first:9999,after:o});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),o=await this.getResourcesToSpend([t]);e.addResources(o)}async transfer(e,t,o=C.NativeAssetId,i={}){let c={gasLimit:N.MAX_GAS_PER_TX,...i},m=new d.ScriptTransactionRequest(c);m.addCoinOutput(e,t,o);let p=m.calculateFee(),u=[];p.assetId===(0,g.hexlify)(o)?(p.amount=p.amount.add(t),u=[p]):u=[[t,o],p];let T=await this.getResourcesToSpend(u);return m.addResources(T),this.sendTransaction(m)}async withdrawToBaseLayer(e,t,o={}){let i=(0,g.arrayify)("0x".concat(e.toHexString().substring(2).padStart(64,"0"))),c=(0,g.arrayify)("0x".concat((0,F.bn)(t).toHex().substring(2).padStart(16,"0"))),p={script:new Uint8Array([...(0,g.arrayify)(d.withdrawScript.bytes),...i,...c]),gasLimit:N.MAX_GAS_PER_TX,...o},u=new d.ScriptTransactionRequest(p);u.addMessageOutputs();let T=u.calculateFee(),U=[];T.amount=T.amount.add(t),U=[T];let _=await this.getResourcesToSpend(U);return u.addResources(_),this.sendTransaction(u)}async sendTransaction(e){let t=(0,d.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(t)}async simulateTransaction(e){let t=(0,d.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.simulate(t)}};s();var x=require("@fuel-ts/hasher"),v=require("@fuel-ts/providers"),z=require("@fuel-ts/signer");var w=class extends h{provider;signer;constructor(e,t=l){let o=new z.Signer(e);super(o.address,t),this.signer=()=>o,this.provider=this.connect(t)}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}async signMessage(e){return await this.signer().sign((0,x.hashMessage)(e))}async signTransaction(e){let t=(0,v.transactionRequestify)(e),o=(0,x.hashTransaction)(t);return await this.signer().sign(o)}async populateTransactionWitnessesSignature(e){let t=(0,v.transactionRequestify)(e),o=await this.signTransaction(t);return t.updateWitnessByOwner(this.address,o),t}async sendTransaction(e){let t=(0,v.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(await this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=(0,v.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.call(await this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}};y(w,"defaultPath","m/44'/1179993420'/0'/0/0");var R=class extends h{unlock(e){return new n(e,this.provider)}},n=class extends w{lock(){return this.signer=()=>new K.Signer("0x00"),new R(this.address,this.provider)}static generate(e){let t=K.Signer.generatePrivateKey(e==null?void 0:e.entropy);return new n(t,e==null?void 0:e.provider)}static fromSeed(e,t,o){let c=L.HDWallet.fromSeed(e).derivePath(t||n.defaultPath);return new n(c.privateKey,o)}static fromMnemonic(e,t,o,i){let c=D.Mnemonic.mnemonicToSeed(e,o),p=L.HDWallet.fromSeed(c).derivePath(t||n.defaultPath);return new n(p.privateKey,i)}static fromExtendedKey(e,t){let o=L.HDWallet.fromExtendedKey(e);return new n(o.privateKey,t)}};var f=class{static fromAddress(e,t=l){return new R(e,t)}static fromPrivateKey(e,t=l){return new n(e,t)}};y(f,"generate",n.generate),y(f,"fromSeed",n.fromSeed),y(f,"fromMnemonic",n.fromMnemonic),y(f,"fromExtendedKey",n.fromExtendedKey);s();s();s();s();s();var Z=require("@ethersproject/bytes");s();var k,q="Node";typeof globalThis<"u"&&globalThis.crypto&&(k=globalThis.crypto,q="Web");if(!k&&typeof require=="function")try{k=require("crypto"),q="Node"}catch(r){console.error("keystore expects a standard Web browser or Node environment.",r)}var b=k,B=q;s();var P=r=>B==="Node"?b.randomBytes(r):b.getRandomValues(new Uint8Array(r));s();var A=require("@fuel-ts/providers");var E=async(r,e)=>{let t=new n(process.env.GENESIS_SECRET||P(32),r.provider),o=await t.getResourcesToSpend(e),i=new A.ScriptTransactionRequest({gasLimit:1e4,gasPrice:1});i.addResources(o),e.map(A.coinQuantityfy).forEach(({amount:m,assetId:p})=>i.addCoinOutput(r.address,m,p)),await(await t.sendTransaction(i)).wait()};var ee=async(r,e)=>{let t=f.generate({provider:r});return e&&await E(t,e),t};0&&(module.exports={generateTestWallet,seedTestWallet});
//# sourceMappingURL=test-utils.js.map