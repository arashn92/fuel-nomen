var D=Object.defineProperty;var Q=(s,e,t)=>e in s?D(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var S=(s=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(s,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):s)(function(s){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+s+'" is not supported')});var O=(s,e)=>()=>(s&&(e=s(s=0)),e);var y=(s,e,t)=>(Q(s,typeof e!="symbol"?e+"":e,t),t);var r=O(()=>{});r();r();r();r();var l="http://127.0.0.1:4000/graphql";r();import{HDWallet as k}from"@fuel-ts/hdwallet";import{Mnemonic as Y}from"@fuel-ts/mnemonic";import{Signer as E}from"@fuel-ts/signer";r();import{arrayify as L,hexlify as _}from"@ethersproject/bytes";import{Address as G}from"@fuel-ts/address";import{NativeAssetId as C}from"@fuel-ts/address/configs";import{AbstractAccount as V}from"@fuel-ts/interfaces";import{bn as I}from"@fuel-ts/math";import{withdrawScript as H,ScriptTransactionRequest as N,Provider as j,transactionRequestify as K}from"@fuel-ts/providers";import{MAX_GAS_PER_TX as q}from"@fuel-ts/transactions/configs";var g=class extends V{address;provider;constructor(e,t=l){super(),this.provider=this.connect(t),this.address=G.fromDynamicInput(e)}connect(e){return typeof e=="string"?this.provider?this.provider.connect(e):this.provider=new j(e):this.provider=e,this.provider}async getResourcesToSpend(e,t){return this.provider.getResourcesToSpend(this.address,e,t)}async getCoins(e){let t=[],i;for(;;){let p=await this.provider.getCoins(this.address,e,{first:9999,after:i});if(t.push(...p),!(p.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return t}async getMessages(){let e=[],o;for(;;){let i=await this.provider.getMessages(this.address,{first:9999,after:o});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} messages are not yet supported`)}return e}async getBalance(e=C){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],o;for(;;){let i=await this.provider.getBalances(this.address,{first:9999,after:o});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),o=await this.getResourcesToSpend([t]);e.addResources(o)}async transfer(e,t,o=C,i={}){let p={gasLimit:q,...i},m=new N(p);m.addCoinOutput(e,t,o);let d=m.calculateFee(),u=[];d.assetId===_(o)?(d.amount=d.amount.add(t),u=[d]):u=[[t,o],d];let h=await this.getResourcesToSpend(u);return m.addResources(h),this.sendTransaction(m)}async withdrawToBaseLayer(e,t,o={}){let i=L("0x".concat(e.toHexString().substring(2).padStart(64,"0"))),p=L("0x".concat(I(t).toHex().substring(2).padStart(16,"0"))),d={script:new Uint8Array([...L(H.bytes),...i,...p]),gasLimit:q,...o},u=new N(d);u.addMessageOutputs();let h=u.calculateFee(),A=[];h.amount=h.amount.add(t),A=[h];let z=await this.getResourcesToSpend(A);return u.addResources(z),this.sendTransaction(u)}async sendTransaction(e){let t=K(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(t)}async simulateTransaction(e){let t=K(e);return await this.provider.addMissingVariables(t),this.provider.simulate(t)}};r();import{hashMessage as J,hashTransaction as $}from"@fuel-ts/hasher";import{transactionRequestify as P}from"@fuel-ts/providers";import{Signer as X}from"@fuel-ts/signer";var T=class extends g{provider;signer;constructor(e,t=l){let o=new X(e);super(o.address,t),this.signer=()=>o,this.provider=this.connect(t)}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}async signMessage(e){return await this.signer().sign(J(e))}async signTransaction(e){let t=P(e),o=$(t);return await this.signer().sign(o)}async populateTransactionWitnessesSignature(e){let t=P(e),o=await this.signTransaction(t);return t.updateWitnessByOwner(this.address,o),t}async sendTransaction(e){let t=P(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(await this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=P(e);return await this.provider.addMissingVariables(t),this.provider.call(await this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}};y(T,"defaultPath","m/44'/1179993420'/0'/0/0");var v=class extends g{unlock(e){return new n(e,this.provider)}},n=class extends T{lock(){return this.signer=()=>new E("0x00"),new v(this.address,this.provider)}static generate(e){let t=E.generatePrivateKey(e==null?void 0:e.entropy);return new n(t,e==null?void 0:e.provider)}static fromSeed(e,t,o){let p=k.fromSeed(e).derivePath(t||n.defaultPath);return new n(p.privateKey,o)}static fromMnemonic(e,t,o,i){let p=Y.mnemonicToSeed(e,o),d=k.fromSeed(p).derivePath(t||n.defaultPath);return new n(d.privateKey,i)}static fromExtendedKey(e,t){let o=k.fromExtendedKey(e);return new n(o.privateKey,t)}};var f=class{static fromAddress(e,t=l){return new v(e,t)}static fromPrivateKey(e,t=l){return new n(e,t)}};y(f,"generate",n.generate),y(f,"fromSeed",n.fromSeed),y(f,"fromMnemonic",n.fromMnemonic),y(f,"fromExtendedKey",n.fromExtendedKey);r();r();r();r();r();import{arrayify as Ce}from"@ethersproject/bytes";r();var b,B="Node";typeof globalThis<"u"&&globalThis.crypto&&(b=globalThis.crypto,B="Web");if(!b&&typeof S=="function")try{b=S("crypto"),B="Node"}catch(s){console.error("keystore expects a standard Web browser or Node environment.",s)}var w=b,x=B;r();var R=s=>x==="Node"?w.randomBytes(s):w.getRandomValues(new Uint8Array(s));r();import{coinQuantityfy as Z,ScriptTransactionRequest as ee}from"@fuel-ts/providers";var M=async(s,e)=>{let t=new n(process.env.GENESIS_SECRET||R(32),s.provider),o=await t.getResourcesToSpend(e),i=new ee({gasLimit:1e4,gasPrice:1});i.addResources(o),e.map(Z).forEach(({amount:m,assetId:d})=>i.addCoinOutput(s.address,m,d)),await(await t.sendTransaction(i)).wait()};var at=async(s,e)=>{let t=f.generate({provider:s});return e&&await M(t,e),t};export{at as generateTestWallet,M as seedTestWallet};
//# sourceMappingURL=test-utils.mjs.map