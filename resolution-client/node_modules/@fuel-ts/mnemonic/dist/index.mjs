import{Base58 as I}from"@ethersproject/basex";import{hexDataSlice as U,concat as g,hexlify as N,arrayify as m}from"@ethersproject/bytes";import{pbkdf2 as C}from"@ethersproject/pbkdf2";import{computeHmac as F,sha256 as x,SupportedAlgorithm as W}from"@ethersproject/sha2";import{randomBytes as S}from"@fuel-ts/keystore";import{english as d}from"@fuel-ts/wordlists";import{arrayify as u}from"@ethersproject/bytes";import{sha256 as B}from"@ethersproject/sha2";function y(n){let e=n.normalize("NFKD"),t=[];for(let r=0;r<e.length;r+=1){let s=e.charCodeAt(r);if(s<128)t.push(s);else if(s<2048)t.push(s>>6|192),t.push(s&63|128);else if((s&64512)===55296){r+=1;let o=e.charCodeAt(r);if(r>=e.length||(o&64512)!==56320)throw new Error("invalid utf-8 string");let c=65536+((s&1023)<<10)+(o&1023);t.push(c>>18|240),t.push(c>>12&63|128),t.push(c>>6&63|128),t.push(c&63|128)}else t.push(s>>12|224),t.push(s>>6&63|128),t.push(s&63|128)}return u(t)}function v(n){return(1<<n)-1}function b(n){return(1<<n)-1<<8-n}function p(n){return Array.isArray(n)?n:n.split(/\s+/)}function E(n){return Array.isArray(n)?n.join(" "):n}function T(n){let e=[0],t=11;for(let o=0;o<n.length;o+=1)t>8?(e[e.length-1]<<=8,e[e.length-1]|=n[o],t-=8):(e[e.length-1]<<=t,e[e.length-1]|=n[o]>>8-t,e.push(n[o]&v(8-t)),t+=3);let r=n.length/4,s=u(B(n))[0]&b(r);return e[e.length-1]<<=r,e[e.length-1]|=s>>8-r,e}function P(n,e){let t=Math.ceil(11*n.length/8),r=u(new Uint8Array(t)),s=0;for(let a=0;a<n.length;a+=1){let h=e.indexOf(n[a].normalize("NFKD"));if(h===-1)throw new Error("invalid mnemonic");for(let l=0;l<11;l+=1)h&1<<10-l&&(r[s>>3]|=1<<7-s%8),s+=1}let o=32*n.length/3,c=n.length/3,f=b(c);if((u(B(r.slice(0,o/8)))[0]&f)!==(r[r.length-1]&f))throw new Error("invalid checksum");return r.slice(0,o/8)}var j=y("Bitcoin seed"),z=76066276,D=70615956,K=[12,15,18,21,24];function L(n){if(n.length!==2048)throw new Error("Invalid word list length")}function O(n){if(n.length%4!==0||n.length<16||n.length>32)throw new Error("invalid entropy")}function A(n){if(!K.includes(n.length))throw new Error("invalid mnemonic size")}var i=class{wordlist;constructor(e=d){this.wordlist=e,L(this.wordlist)}mnemonicToEntropy(e){return i.mnemonicToEntropy(e,this.wordlist)}entropyToMnemonic(e){return i.entropyToMnemonic(e,this.wordlist)}static mnemonicToEntropy(e,t=d){let r=p(e);return A(r),N(P(r,t))}static entropyToMnemonic(e,t=d){let r=m(e,{allowMissingPrefix:!0});return L(t),O(r),T(r).map(s=>t[s]).join(" ")}static mnemonicToSeed(e,t=""){A(p(e));let r=y(E(e)),s=y(`mnemonic${t}`);return C(r,s,2048,64,"sha512")}static mnemonicToMasterKeys(e,t=""){let r=i.mnemonicToSeed(e,t);return i.masterKeysFromSeed(r)}static isMnemonicValid(e){let t=p(e),r=0;try{A(t)}catch{return!1}for(;r<t.length;){if(i.binarySearch(t[r])===!1)return!1;r+=1}return!0}static binarySearch(e){let t=d,r=0,s=t.length-1;for(;r<=s;){let o=Math.floor((r+s)/2);if(t[o]===e)return!0;e<t[o]?s=o-1:r=o+1}return!1}static masterKeysFromSeed(e){let t=m(e);if(t.length<16||t.length>64)throw new Error("invalid seed");return m(F(W.sha512,j,t))}static seedToExtendedKey(e,t=!1){let r=i.masterKeysFromSeed(e),s=m(t?D:z),o="0x00",c="0x00000000",f="0x00000000",w=r.slice(32),a=r.slice(0,32),h=g([s,o,c,f,w,g(["0x00",a])]),l=U(x(x(h)),0,4);return I.encode(g([h,l]))}static generate(e=32,t=""){let r=t?x(g([S(e),m(t)])):S(e);return i.entropyToMnemonic(r)}},V=i;export{K as MNEMONIC_SIZES,V as Mnemonic};
//# sourceMappingURL=index.mjs.map